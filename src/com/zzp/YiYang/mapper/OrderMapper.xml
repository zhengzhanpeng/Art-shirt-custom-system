<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzp.YiYang.mapper.OrderMapper">
    <resultMap id="myOrderDTOMap" type="MyOrderDTO">
        <id column="order_id" property="id"/>
        <result column="send_time" property="sendTime"/>
        <result column="price" property="realityPrice"/>
        <result column="send_type" property="sendType"/>
        <result column="e_name" property="eName"/>
        <result column="e_number" property="eNumber"/>
        <result column="state" property="state"/>
        <association property="sendAddress" javaType="sendAddress">
            <id column="send_address_id" property="id"/>
            <result column="receive_name" property="receiveName"/>
            <result column="phone" property="phone"/>
            <result column="province" property="province"/>
            <result column="city" property="city"/>
            <result column="district" property="district"/>
            <result column="address" property="address"/>
            <result column="postal_code" property="postalCode"/>
            <result column="address_label" property="addressLabel"/>
            <result column="default_address" property="defaultAddress"/>
        </association>
        <collection property="itemDTOs" ofType="ItemDTO">
            <id column="bought_item_id" property="id"/>
            <result column="img_address" property="imgAddress"/>
            <result column="back_img_address" property="backImgAddress"/>
            <result column="number" property="number"/>
            <result column="size" property="size"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="reality_price" property="realityPrice"/>
        </collection>
    </resultMap>

    <select id="getOrders" resultMap="myOrderDTOMap">
        SELECT
        o.id AS order_id,
        o.send_time,
        o.send_type,
        o.state,
        o.reality_price AS price,
        s.id AS send_address_id,
        s.receive_name,
        s.phone,
        s.province,
        s.city,
        s.district,
        s.address,
        s.postal_code,
        s.address_label,
        s.default_address,
        b.id AS bought_item_id,
        b.img_address,
        b.back_img_address,
        b.number,
        b.reality_price,
        c.name,
        e.name AS e_name,
        e.number AS e_number,
        g.size
        FROM order1 o
        LEFT OUTER JOIN send_address s ON o.username = s.username AND o.send_address_id = s.id
        LEFT OUTER JOIN bought_item b ON b.order_id = o.id
        LEFT OUTER JOIN goods g ON g.id = b.goods_id
        LEFT OUTER JOIN clothes c ON c.id = g.clothes_id
        LEFT OUTER JOIN express_message e ON o.id = e.order_id
        WHERE o.username = #{userName};
    </select>

    <!--衣服制作员获取相应的订单信息-->
    <resultMap id="getOrdersByMakerMap" type="OrderManageDTO">
        <id column="order_id" property="id"/>
        <result column="price" property="realityPrice"/>
        <result column="send_type" property="sendType"/>
        <result column="desc1" property="desc1"/>
        <result column="state" property="state"/>
        <result column="receive_name" property="receiveName"/>
        <result column="phone" property="phone"/>
        <collection property="itemDTOs" ofType="ItemDTO">
            <id column="bought_item_id" property="id"/>
            <result column="img_address" property="imgAddress"/>
            <result column="back_img_address" property="backImgAddress"/>
            <result column="number" property="number"/>
            <result column="size" property="size"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="reality_price" property="realityPrice"/>
        </collection>
    </resultMap>

    <select id="getOrdersByMaker" resultMap="getOrdersByMakerMap">
        SELECT
        o.id AS order_id,
        o.send_type,
        o.state,
        o.desc1,
        o.reality_price AS price,
        s.receive_name,
        s.phone,
        b.id AS bought_item_id,
        b.img_address,
        b.back_img_address,
        b.number,
        b.reality_price,
        c.name,
        g.size
        FROM order1 o
        LEFT OUTER JOIN send_address s ON o.username = s.username AND o.send_address_id = s.id
        LEFT OUTER JOIN bought_item b ON b.order_id = o.id
        LEFT OUTER JOIN goods g ON g.id = b.goods_id
        LEFT OUTER JOIN clothes c ON c.id = g.clothes_id
        WHERE state BETWEEN 1 AND 2;
    </select>
    <!--!!衣服制作员获取相应的订单信息-->

    <!--发货员获取相应的订单信息-->
    <resultMap id="getOrdersBySenderMap" type="OrderManageDTO">
        <id column="order_id" property="id"/>
        <result column="price" property="realityPrice"/>
        <result column="send_type" property="sendType"/>
        <result column="desc1" property="desc1"/>
        <result column="state" property="state"/>
        <result column="receive_name" property="receiveName"/>
        <result column="phone" property="phone"/>
        <result column="province" property="province"/>
        <result column="city" property="city"/>
        <result column="district" property="district"/>
        <result column="address" property="address"/>
        <collection property="itemDTOs" ofType="ItemDTO">
            <id column="bought_item_id" property="id"/>
            <result column="img_address" property="imgAddress"/>
            <result column="back_img_address" property="backImgAddress"/>
            <result column="number" property="number"/>
            <result column="size" property="size"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="reality_price" property="realityPrice"/>
        </collection>
    </resultMap>

    <select id="getOrdersBySender" resultMap="getOrdersBySenderMap">
        SELECT
        o.id AS order_id,
        o.send_time,
        o.send_type,
        o.state,
        o.desc1,
        o.reality_price AS price,
        s.receive_name,
        s.phone,
        s.province,
        s.city,
        s.district,
        s.address,
        b.id AS bought_item_id,
        <!--b.img_address,-->
        <!--b.back_img_address,-->
        b.number,
        <!--b.reality_price,-->
        c.name,
        g.size
        FROM order1 o
        LEFT OUTER JOIN send_address s ON o.username = s.username AND o.send_address_id = s.id
        LEFT OUTER JOIN bought_item b ON b.order_id = o.id
        LEFT OUTER JOIN goods g ON g.id = b.goods_id
        LEFT OUTER JOIN clothes c ON c.id = g.clothes_id
        WHERE state = 3;
    </select>

    <resultMap id="orderDTOMap" type="orderDTO">
        <id column="order_id" property="id"/>
        <result column="send_time" property="sendTime"/>
        <result column="price" property="realityPrice"/>
        <result column="send_type" property="sendType"/>
        <collection property="sendAddresses" ofType="sendAddress">
            <id column="send_address_id" property="id"/>
            <result column="receive_name" property="receiveName"/>
            <result column="phone" property="phone"/>
            <result column="province" property="province"/>
            <result column="city" property="city"/>
            <result column="district" property="district"/>
            <result column="address" property="address"/>
            <result column="postal_code" property="postalCode"/>
            <result column="address_label" property="addressLabel"/>
            <result column="default_address" property="defaultAddress"/>
        </collection>
        <collection property="itemDTOs" ofType="ItemDTO">
            <id column="bought_item_id" property="id"/>
            <result column="img_address" property="imgAddress"/>
            <result column="back_img_address" property="backImgAddress"/>
            <result column="number" property="number"/>
            <result column="size" property="size"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="reality_price" property="realityPrice"/>
        </collection>
    </resultMap>
    <select id="getOrderDTO" resultMap="orderDTOMap">
        SELECT
        o.id AS order_id,
        o.send_time,
        o.send_type,
        o.reality_price AS price,
        s.id AS send_address_id,
        s.receive_name,
        s.phone,
        s.province,
        s.city,
        s.district,
        s.address,
        s.postal_code,
        s.address_label,
        s.default_address,
        b.id AS bought_item_id,
        b.img_address,
        b.back_img_address,
        b.number,
        g.size,
        c.name,
        c.type,
        b.reality_price
        FROM order1 o
        LEFT OUTER JOIN send_address s ON o.username = s.username
        LEFT OUTER JOIN bought_item b ON b.order_id = o.id
        LEFT OUTER JOIN goods g ON g.id = b.goods_id
        LEFT OUTER JOIN clothes c ON c.id = g.clothes_id
        WHERE o.id = #{orderId} AND o.username = #{userName};
    </select>
    <resultMap id="anOrderDTOMap" type="AnOrderDTO">
        <id column="order_id" property="id"/>
        <result column="price" property="realityPrice"/>
        <result column="send_type" property="sendType"/>
        <association  property="sendAddress" javaType="sendAddress">
            <id column="send_address_id" property="id"/>
            <result column="receive_name" property="receiveName"/>
            <result column="phone" property="phone"/>
            <result column="province" property="province"/>
            <result column="city" property="city"/>
            <result column="district" property="district"/>
            <result column="address" property="address"/>
            <result column="postal_code" property="postalCode"/>
            <result column="address_label" property="addressLabel"/>
            <result column="default_address" property="defaultAddress"/>
        </association >
    </resultMap>
    <select id="getAnOrderDTO" resultMap="anOrderDTOMap">
        SELECT
        o.id AS order_id,
        o.send_type,
        o.reality_price AS price,
        s.id AS send_address_id,
        s.receive_name,
        s.phone,
        s.province,
        s.city,
        s.district,
        s.address,
        s.postal_code,
        s.address_label,
        s.default_address
        FROM order1 o
        LEFT OUTER JOIN send_address s ON o.username = s.username
        WHERE o.id = #{orderId} LIMIT 1;
    </select>
    <update id="set" parameterType="order">
        UPDATE order1
        <set>
            <if test="sendAddressId != 0 ">
                send_address_id = #{sendAddressId},
            </if>
            <if test="realityPrice != 0">
                reality_price = #{realityPrice},
            </if>
            <if test="desc1 != null and desc1 != ''">
                desc1 = #{desc1},
            </if>
            <if test="state != 0">
                state = #{state},
            </if>
            <if test="buyTime != null">
                buy_time = #{buyTime},
            </if>
            <if test="sendTime != 0">
                send_time = #{sendTime},
            </if>
            <if test="sendType != 0">
                send_type = #{sendType}
            </if>
        </set>
        WHERE id = #{id};
    </update>
    <select id="getOrder" parameterType="String" resultType="order">
        SELECT  FROM  WHERE ;
    </select>
    <insert id="addOrder" parameterType="order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO order1 VALUES
        (null, #{userName},
        <if test="sendAddressId == 0">null, </if>
        <if test="sendAddressId != 0">#{sendAddressId}, </if>
        #{realityPrice}, #{desc1}, #{state}, null, null, #{sendType});
    </insert>
    <update id="setRealityPrice">
        UPDATE order1 SET reality_price = #{realityPrice, jdbcType=FLOAT} WHERE id = #{id};
    </update>
    <select id="getUserName" parameterType="Integer" resultType="String">
        SELECT username FROM order1 WHERE id = #{id} LIMIT 1;
    </select>
    <select id="getState" parameterType="Integer" resultType="Integer">
        SELECT state FROM order1 WHERE id = #{id} LIMIT 1;
    </select>
    <select id="getStateByUserName" resultType="Integer">
        SELECT state FROM order1 WHERE id = #{id} AND username = #{userName} LIMIT 1;
    </select>
    <select id="getPrice" parameterType="Integer" resultType="Float">
        SELECT reality_price FROM order1 WHERE id = #{id} LIMIT 1;
    </select>
    <update id="setStateFinished" parameterType="Integer">
        UPDATE order1 set state = 3 WHERE id = #{id} AND state = 2 LIMIT 1;
    </update>
    <update id="setStateSent" parameterType="Integer">
        UPDATE order1 set state = 4 WHERE id = #{orderId} AND state = 3 LIMIT 1;
    </update>
    <insert id="addExpressMessage" parameterType="ExpressMessage">
        INSERT INTO express_message VALUES(null, #{orderId}, #{name}, #{number});
    </insert>

</mapper>